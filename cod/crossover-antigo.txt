void crossover(individuo* ind1,individuo* ind2,
               individuo* filho1,individuo* filho2)
{
    /*Função responsável pelo cruzamento dos indivíduos*/

    /*pt1 é o indice de corte no cromossomo 1*/
    int pt1 = rand()%TAM_CROMOSSOMO1; /*numeros de 0 a TAM_CROMOSSOMO1 - 1*/
    for(int i=0;i<pt1;i++)
    {
        /*Filho 1 recebe o cromossomo de 0 até ponto_de_corte do pai 1*/
        filho1->cromossomo1[i] = ind1->cromossomo1[i];
        /*Filho 2 recebe o cromossomo de 0 até ponto_de_corte do pai 2*/
        filho2->cromossomo1[i] = ind2->cromossomo1[i]; 
    }
    for(int i=pt1;i<TAM_CROMOSSOMO1;i++)
    {
        /*Filho 1 recebe o cromossomo de ponto_de_corte até 
        o fim do cromossomo do pai 2*/
        filho1->cromossomo1[i] = ind2->cromossomo1[i];
        /*Filho 2 recebe o cromossomo de ponto_de_corte até
        o fim do cromossomo do pai 1*/
        filho2->cromossomo1[i] = ind1->cromossomo1[i];
    }
    /*pt2 é o indice de corte no cromossomo 2*/
    int pt2 = rand()%TAM_CROMOSSOMO2;/*numeros de 0 a TAM_CROMOSSOMO2 - 1*/

    for(int i=0;i<pt2;i++)
    {
        /*Filho 1 recebe o cromossomo de 0 até ponto_de_corte do pai 1*/
        filho1->cromossomo2[i] = ind1->cromossomo2[i];
        /*Filho 2 recebe o cromossomo de 0 até ponto_de_corte do pai 2*/
        filho2->cromossomo2[i] = ind2->cromossomo2[i];
    }
    for(int i=pt2;i<TAM_CROMOSSOMO2;i++)
    {
        /*Filho 1 recebe o cromossomo de ponto_de_corte até 
        o fim do cromossomo do pai 2*/
        filho1->cromossomo2[i] = ind2->cromossomo2[i];
        /*Filho 2 recebe o cromossomo de ponto_de_corte até
        o fim do cromossomo do pai 1*/
        filho2->cromossomo2[i] = ind1->cromossomo2[i];
    }

    atualiza_individuo(filho1);
    atualiza_individuo(filho2);

    int geracao_filhos = (ind1->geracao > ind2->geracao) ? ind1->geracao : ind2->geracao;
    geracao_filhos++; /*A geração dos filhos é a próxima geração, ou seja, +1*/
    filho1->geracao = geracao_filhos;
    filho2->geracao = geracao_filhos;
}